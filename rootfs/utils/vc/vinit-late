#!/usr/bin/env bash

#
# Copyright 2022-2023 Danny Lin <danny@kdrag0n.dev>. All rights reserved.
# 
# Unauthorized copying of this software and associated documentation files (the "Software"), via any medium, is strictly prohibited. Confidential and proprietary.
# 
# The above copyright notice shall be included in all copies or substantial portions of the Software.
#

set -uo pipefail
set -e

echo "[BEGIN] vinit-late"

sysctl -qp /etc/sysctl.conf

# swap
(
    # zram = 2x ram
    zram_mib=$(( $(cat /proc/meminfo | grep MemTotal | awk '{print $2}') / 1024 * 2 ))
    echo /dev/vdc1 > /sys/block/zram0/backing_dev
    echo "${zram_mib}M" > /sys/block/zram0/disksize
    echo huge_idle > /sys/block/zram0/writeback
    mkswap /dev/zram0
    swapon -d -p 32767 /dev/zram0
    sysctl vm.swappiness=100 vm.page-cluster=1
  
    # 1 gib emergency disk swap
    swapon -d -p 1 /dev/vdc2
) &
# 2 mib page reporting
echo 9 > /sys/module/page_reporting/parameters/page_reporting_order

# guest tools data
mount --bind /data/guest-state /opt/macvirt-guest/data

# resize fs
xfs_growfs /dev/vdb1

# upgrade data: v3 -> v4
if [[ "$(cat /data/version)" -lt 4 ]]; then
    echo "[DATA pre-UPGRADE] v3 -> v4: start"

    set +e
    xfs_quota -x -c 'project -s -p /data/ 1' /data
    set -e

    sync
    echo "[DATA pre-UPGRADE] v3 -> v4: done"
fi

# ok to update quota/balloon now
mkdir -p /tmp/flags
touch /tmp/flags/data_resized
sync -f /data

# lxc needs home for .config
export HOME=/root
function wait_for_lxc() {
    while true; do
        if lxc list -c n -f csv > /dev/null 2>&1; then
            break
        fi
        sleep 0.2
    done
}

echo "[VINIT-LATE] wait for lxc"
wait_for_lxc

# late nfs start because we need bind mount
mkdir /Linux
mount -t tmpfs tmpfs -o noatime /Linux
# try to reduce nfs cpu usage
touch /Linux/.metadata_never_index /Linux/.metadata-never-index /Linux/.metadata_never_index_unless_rootfs
mkdir /Linux/Data
mount --bind /data /Linux/Data
mkdir /Linux/DockerVolumes
mount --bind /data/var/lib/docker/volumes /Linux/DockerVolumes
mkdir /Linux/Containers
mkdir -p /data/var/lib/lxd/storage-pools/default/containers # first boot
mount --bind /data/var/lib/lxd/storage-pools/default/containers /Linux/Containers
# lock
mount -o remount,ro /Linux
rc-service nfs start
# vsock
/opt/vc/add-nfsd-vsock > /proc/fs/nfsd/portlist

# late lxd tuning
# TODO: do this for nic too
ip link set lxdbr0 txqueuelen 10000

# always update profile
# profile update may fail:
# Error: The following instances failed to update (profile change still saved):
# - Project: default, Instance: alpine: Failed to create instance update operation: Instance is busy running a "start" operation
# /dev/kmsg to fix empty dmesg in some distros (e.g. nixos) if they write to it
# global kmsg isn't ideal, but it's ok for us
set +e
lxc config edit <<EOF
config:
  core.https_address:
  core.trust_password:
  images.auto_update_interval: "0"
EOF
eth_mtu="$(ip link show eth0 | head -n1 | cut -d' ' -f5)"
lxc network edit lxdbr0 <<EOF
config:
  ipv4.address: 172.30.31.1/24
  ipv4.nat: "true"
  ipv6.address: fc00:30:31::1/64
  ipv6.nat: "true"
  ipv4.dhcp.expiry: 720h
  ipv6.dhcp.expiry: 720h
  bridge.mtu: $eth_mtu
description: ""
EOF
lxc profile edit default <<EOF
config:
  security.nesting: "true"
  security.privileged: "true"
  security.devlxd: "false"
  boot.host_shutdown_timeout: "2"
description: vchost profile
devices:
  dev-ppp:
    source: /dev/ppp
    type: unix-char
  dev-kmsg:
    source: /dev/kmsg
    type: unix-char
  dev-loopcontrol:
    source: /dev/loop-control
    type: unix-char
  eth0:
    name: eth0
    network: lxdbr0
    type: nic
  root:
    path: /
    pool: default
    type: disk
  shared-mac:
    path: /mnt/mac
    source: /mnt/mac
    type: disk
  guest-tools:
    path: /opt/macvirt-guest
    source: /mnt/guest-tools
    type: disk
    recursive: "true"
  # fake for k8s
  proc-sysctl-panic:
    path: /proc/sys/kernel/panic
    source: /fake/sysctl/kernel.panic
    type: disk
name: default
EOF
set -e

echo "[END] vinit-late"
