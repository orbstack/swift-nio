// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: wormhole.proto

package generated

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// message created by server, sent to client
type RpcServerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ServerMessage:
	//
	//	*RpcServerMessage_StdoutData
	//	*RpcServerMessage_StderrData
	//	*RpcServerMessage_ExitStatus
	//	*RpcServerMessage_ClientConnectAck
	ServerMessage isRpcServerMessage_ServerMessage `protobuf_oneof:"server_message"`
}

func (x *RpcServerMessage) Reset() {
	*x = RpcServerMessage{}
	mi := &file_wormhole_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcServerMessage) ProtoMessage() {}

func (x *RpcServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wormhole_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcServerMessage.ProtoReflect.Descriptor instead.
func (*RpcServerMessage) Descriptor() ([]byte, []int) {
	return file_wormhole_proto_rawDescGZIP(), []int{0}
}

func (m *RpcServerMessage) GetServerMessage() isRpcServerMessage_ServerMessage {
	if m != nil {
		return m.ServerMessage
	}
	return nil
}

func (x *RpcServerMessage) GetStdoutData() *StdoutData {
	if x, ok := x.GetServerMessage().(*RpcServerMessage_StdoutData); ok {
		return x.StdoutData
	}
	return nil
}

func (x *RpcServerMessage) GetStderrData() *StderrData {
	if x, ok := x.GetServerMessage().(*RpcServerMessage_StderrData); ok {
		return x.StderrData
	}
	return nil
}

func (x *RpcServerMessage) GetExitStatus() *ExitStatus {
	if x, ok := x.GetServerMessage().(*RpcServerMessage_ExitStatus); ok {
		return x.ExitStatus
	}
	return nil
}

func (x *RpcServerMessage) GetClientConnectAck() *ClientConnectAck {
	if x, ok := x.GetServerMessage().(*RpcServerMessage_ClientConnectAck); ok {
		return x.ClientConnectAck
	}
	return nil
}

type isRpcServerMessage_ServerMessage interface {
	isRpcServerMessage_ServerMessage()
}

type RpcServerMessage_StdoutData struct {
	StdoutData *StdoutData `protobuf:"bytes,1,opt,name=stdout_data,json=stdoutData,proto3,oneof"`
}

type RpcServerMessage_StderrData struct {
	StderrData *StderrData `protobuf:"bytes,2,opt,name=stderr_data,json=stderrData,proto3,oneof"`
}

type RpcServerMessage_ExitStatus struct {
	ExitStatus *ExitStatus `protobuf:"bytes,3,opt,name=exit_status,json=exitStatus,proto3,oneof"`
}

type RpcServerMessage_ClientConnectAck struct {
	ClientConnectAck *ClientConnectAck `protobuf:"bytes,4,opt,name=client_connect_ack,json=clientConnectAck,proto3,oneof"`
}

func (*RpcServerMessage_StdoutData) isRpcServerMessage_ServerMessage() {}

func (*RpcServerMessage_StderrData) isRpcServerMessage_ServerMessage() {}

func (*RpcServerMessage_ExitStatus) isRpcServerMessage_ServerMessage() {}

func (*RpcServerMessage_ClientConnectAck) isRpcServerMessage_ServerMessage() {}

// message created by client, sent to server
type RpcClientMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ClientMessage:
	//
	//	*RpcClientMessage_StdinData
	//	*RpcClientMessage_TerminalResize
	//	*RpcClientMessage_RequestPty
	//	*RpcClientMessage_StartPayload
	//	*RpcClientMessage_NukeData
	ClientMessage isRpcClientMessage_ClientMessage `protobuf_oneof:"client_message"`
}

func (x *RpcClientMessage) Reset() {
	*x = RpcClientMessage{}
	mi := &file_wormhole_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcClientMessage) ProtoMessage() {}

func (x *RpcClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wormhole_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcClientMessage.ProtoReflect.Descriptor instead.
func (*RpcClientMessage) Descriptor() ([]byte, []int) {
	return file_wormhole_proto_rawDescGZIP(), []int{1}
}

func (m *RpcClientMessage) GetClientMessage() isRpcClientMessage_ClientMessage {
	if m != nil {
		return m.ClientMessage
	}
	return nil
}

func (x *RpcClientMessage) GetStdinData() *StdinData {
	if x, ok := x.GetClientMessage().(*RpcClientMessage_StdinData); ok {
		return x.StdinData
	}
	return nil
}

func (x *RpcClientMessage) GetTerminalResize() *TerminalResize {
	if x, ok := x.GetClientMessage().(*RpcClientMessage_TerminalResize); ok {
		return x.TerminalResize
	}
	return nil
}

func (x *RpcClientMessage) GetRequestPty() *RequestPty {
	if x, ok := x.GetClientMessage().(*RpcClientMessage_RequestPty); ok {
		return x.RequestPty
	}
	return nil
}

func (x *RpcClientMessage) GetStartPayload() *StartPayload {
	if x, ok := x.GetClientMessage().(*RpcClientMessage_StartPayload); ok {
		return x.StartPayload
	}
	return nil
}

func (x *RpcClientMessage) GetNukeData() *NukeData {
	if x, ok := x.GetClientMessage().(*RpcClientMessage_NukeData); ok {
		return x.NukeData
	}
	return nil
}

type isRpcClientMessage_ClientMessage interface {
	isRpcClientMessage_ClientMessage()
}

type RpcClientMessage_StdinData struct {
	StdinData *StdinData `protobuf:"bytes,1,opt,name=stdin_data,json=stdinData,proto3,oneof"`
}

type RpcClientMessage_TerminalResize struct {
	TerminalResize *TerminalResize `protobuf:"bytes,2,opt,name=terminal_resize,json=terminalResize,proto3,oneof"`
}

type RpcClientMessage_RequestPty struct {
	RequestPty *RequestPty `protobuf:"bytes,3,opt,name=request_pty,json=requestPty,proto3,oneof"`
}

type RpcClientMessage_StartPayload struct {
	StartPayload *StartPayload `protobuf:"bytes,4,opt,name=start_payload,json=startPayload,proto3,oneof"`
}

type RpcClientMessage_NukeData struct {
	NukeData *NukeData `protobuf:"bytes,5,opt,name=nuke_data,json=nukeData,proto3,oneof"`
}

func (*RpcClientMessage_StdinData) isRpcClientMessage_ClientMessage() {}

func (*RpcClientMessage_TerminalResize) isRpcClientMessage_ClientMessage() {}

func (*RpcClientMessage_RequestPty) isRpcClientMessage_ClientMessage() {}

func (*RpcClientMessage_StartPayload) isRpcClientMessage_ClientMessage() {}

func (*RpcClientMessage_NukeData) isRpcClientMessage_ClientMessage() {}

// server messages
type StdinData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,11,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StdinData) Reset() {
	*x = StdinData{}
	mi := &file_wormhole_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StdinData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StdinData) ProtoMessage() {}

func (x *StdinData) ProtoReflect() protoreflect.Message {
	mi := &file_wormhole_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StdinData.ProtoReflect.Descriptor instead.
func (*StdinData) Descriptor() ([]byte, []int) {
	return file_wormhole_proto_rawDescGZIP(), []int{2}
}

func (x *StdinData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type TerminalResize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cols uint32 `protobuf:"varint,12,opt,name=cols,proto3" json:"cols,omitempty"`
	Rows uint32 `protobuf:"varint,13,opt,name=rows,proto3" json:"rows,omitempty"`
}

func (x *TerminalResize) Reset() {
	*x = TerminalResize{}
	mi := &file_wormhole_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerminalResize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalResize) ProtoMessage() {}

func (x *TerminalResize) ProtoReflect() protoreflect.Message {
	mi := &file_wormhole_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalResize.ProtoReflect.Descriptor instead.
func (*TerminalResize) Descriptor() ([]byte, []int) {
	return file_wormhole_proto_rawDescGZIP(), []int{3}
}

func (x *TerminalResize) GetCols() uint32 {
	if x != nil {
		return x.Cols
	}
	return 0
}

func (x *TerminalResize) GetRows() uint32 {
	if x != nil {
		return x.Rows
	}
	return 0
}

type RequestPty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TermEnv string `protobuf:"bytes,14,opt,name=term_env,json=termEnv,proto3" json:"term_env,omitempty"`
	Rows    uint32 `protobuf:"varint,15,opt,name=rows,proto3" json:"rows,omitempty"`
	Cols    uint32 `protobuf:"varint,16,opt,name=cols,proto3" json:"cols,omitempty"`
	Termios []byte `protobuf:"bytes,17,opt,name=termios,proto3" json:"termios,omitempty"`
}

func (x *RequestPty) Reset() {
	*x = RequestPty{}
	mi := &file_wormhole_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestPty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPty) ProtoMessage() {}

func (x *RequestPty) ProtoReflect() protoreflect.Message {
	mi := &file_wormhole_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPty.ProtoReflect.Descriptor instead.
func (*RequestPty) Descriptor() ([]byte, []int) {
	return file_wormhole_proto_rawDescGZIP(), []int{4}
}

func (x *RequestPty) GetTermEnv() string {
	if x != nil {
		return x.TermEnv
	}
	return ""
}

func (x *RequestPty) GetRows() uint32 {
	if x != nil {
		return x.Rows
	}
	return 0
}

func (x *RequestPty) GetCols() uint32 {
	if x != nil {
		return x.Cols
	}
	return 0
}

func (x *RequestPty) GetTermios() []byte {
	if x != nil {
		return x.Termios
	}
	return nil
}

type StartPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WormholeParam string `protobuf:"bytes,18,opt,name=wormhole_param,json=wormholeParam,proto3" json:"wormhole_param,omitempty"`
}

func (x *StartPayload) Reset() {
	*x = StartPayload{}
	mi := &file_wormhole_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPayload) ProtoMessage() {}

func (x *StartPayload) ProtoReflect() protoreflect.Message {
	mi := &file_wormhole_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPayload.ProtoReflect.Descriptor instead.
func (*StartPayload) Descriptor() ([]byte, []int) {
	return file_wormhole_proto_rawDescGZIP(), []int{5}
}

func (x *StartPayload) GetWormholeParam() string {
	if x != nil {
		return x.WormholeParam
	}
	return ""
}

type NukeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NukeData) Reset() {
	*x = NukeData{}
	mi := &file_wormhole_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NukeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NukeData) ProtoMessage() {}

func (x *NukeData) ProtoReflect() protoreflect.Message {
	mi := &file_wormhole_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NukeData.ProtoReflect.Descriptor instead.
func (*NukeData) Descriptor() ([]byte, []int) {
	return file_wormhole_proto_rawDescGZIP(), []int{6}
}

// client messages
type StdoutData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,11,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StdoutData) Reset() {
	*x = StdoutData{}
	mi := &file_wormhole_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StdoutData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StdoutData) ProtoMessage() {}

func (x *StdoutData) ProtoReflect() protoreflect.Message {
	mi := &file_wormhole_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StdoutData.ProtoReflect.Descriptor instead.
func (*StdoutData) Descriptor() ([]byte, []int) {
	return file_wormhole_proto_rawDescGZIP(), []int{7}
}

func (x *StdoutData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type StderrData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,12,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StderrData) Reset() {
	*x = StderrData{}
	mi := &file_wormhole_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StderrData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StderrData) ProtoMessage() {}

func (x *StderrData) ProtoReflect() protoreflect.Message {
	mi := &file_wormhole_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StderrData.ProtoReflect.Descriptor instead.
func (*StderrData) Descriptor() ([]byte, []int) {
	return file_wormhole_proto_rawDescGZIP(), []int{8}
}

func (x *StderrData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ExitStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExitCode uint32 `protobuf:"varint,13,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
}

func (x *ExitStatus) Reset() {
	*x = ExitStatus{}
	mi := &file_wormhole_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExitStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitStatus) ProtoMessage() {}

func (x *ExitStatus) ProtoReflect() protoreflect.Message {
	mi := &file_wormhole_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitStatus.ProtoReflect.Descriptor instead.
func (*ExitStatus) Descriptor() ([]byte, []int) {
	return file_wormhole_proto_rawDescGZIP(), []int{9}
}

func (x *ExitStatus) GetExitCode() uint32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

type ClientConnectAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClientConnectAck) Reset() {
	*x = ClientConnectAck{}
	mi := &file_wormhole_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientConnectAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientConnectAck) ProtoMessage() {}

func (x *ClientConnectAck) ProtoReflect() protoreflect.Message {
	mi := &file_wormhole_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientConnectAck.ProtoReflect.Descriptor instead.
func (*ClientConnectAck) Descriptor() ([]byte, []int) {
	return file_wormhole_proto_rawDescGZIP(), []int{10}
}

var File_wormhole_proto protoreflect.FileDescriptor

var file_wormhole_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x22, 0x9b, 0x02, 0x0a, 0x10, 0x52,
	0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x37, 0x0a, 0x0b, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x2e,
	0x53, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x74,
	0x64, 0x6f, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x0b, 0x73, 0x74, 0x64, 0x65,
	0x72, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x64, 0x65, 0x72, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x37, 0x0a, 0x0b, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c,
	0x65, 0x2e, 0x45, 0x78, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x0a,
	0x65, 0x78, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4a, 0x0a, 0x12, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x63, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c,
	0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x41,
	0x63, 0x6b, 0x48, 0x00, 0x52, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x41, 0x63, 0x6b, 0x42, 0x10, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xca, 0x02, 0x0a, 0x10, 0x52, 0x70, 0x63,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a,
	0x0a, 0x73, 0x74, 0x64, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x64,
	0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x64, 0x69, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x43, 0x0a, 0x0f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x5f,
	0x72, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77,
	0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x70, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x74,
	0x79, 0x12, 0x3d, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x6f, 0x72, 0x6d, 0x68,
	0x6f, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x31, 0x0a, 0x09, 0x6e, 0x75, 0x6b, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x4e,
	0x75, 0x6b, 0x65, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x75, 0x6b, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x42, 0x10, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x1f, 0x0a, 0x09, 0x53, 0x74, 0x64, 0x69, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x38, 0x0a, 0x0e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x6c, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x77, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73,
	0x22, 0x69, 0x0a, 0x0a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x74, 0x79, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x65, 0x6e, 0x76, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x65, 0x72, 0x6d, 0x45, 0x6e, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x77,
	0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x6c,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6f, 0x73, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6f, 0x73, 0x22, 0x35, 0x0a, 0x0c, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x77,
	0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x22, 0x0a, 0x0a, 0x08, 0x4e, 0x75, 0x6b, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x20,
	0x0a, 0x0a, 0x53, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x20, 0x0a, 0x0a, 0x53, 0x74, 0x64, 0x65, 0x72, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x29, 0x0a, 0x0a, 0x45, 0x78, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x12, 0x0a,
	0x10, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x41, 0x63,
	0x6b, 0x42, 0x14, 0x5a, 0x12, 0x63, 0x6d, 0x64, 0x2f, 0x73, 0x63, 0x6c, 0x69, 0x2f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wormhole_proto_rawDescOnce sync.Once
	file_wormhole_proto_rawDescData = file_wormhole_proto_rawDesc
)

func file_wormhole_proto_rawDescGZIP() []byte {
	file_wormhole_proto_rawDescOnce.Do(func() {
		file_wormhole_proto_rawDescData = protoimpl.X.CompressGZIP(file_wormhole_proto_rawDescData)
	})
	return file_wormhole_proto_rawDescData
}

var file_wormhole_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_wormhole_proto_goTypes = []any{
	(*RpcServerMessage)(nil), // 0: wormhole.RpcServerMessage
	(*RpcClientMessage)(nil), // 1: wormhole.RpcClientMessage
	(*StdinData)(nil),        // 2: wormhole.StdinData
	(*TerminalResize)(nil),   // 3: wormhole.TerminalResize
	(*RequestPty)(nil),       // 4: wormhole.RequestPty
	(*StartPayload)(nil),     // 5: wormhole.StartPayload
	(*NukeData)(nil),         // 6: wormhole.NukeData
	(*StdoutData)(nil),       // 7: wormhole.StdoutData
	(*StderrData)(nil),       // 8: wormhole.StderrData
	(*ExitStatus)(nil),       // 9: wormhole.ExitStatus
	(*ClientConnectAck)(nil), // 10: wormhole.ClientConnectAck
}
var file_wormhole_proto_depIdxs = []int32{
	7,  // 0: wormhole.RpcServerMessage.stdout_data:type_name -> wormhole.StdoutData
	8,  // 1: wormhole.RpcServerMessage.stderr_data:type_name -> wormhole.StderrData
	9,  // 2: wormhole.RpcServerMessage.exit_status:type_name -> wormhole.ExitStatus
	10, // 3: wormhole.RpcServerMessage.client_connect_ack:type_name -> wormhole.ClientConnectAck
	2,  // 4: wormhole.RpcClientMessage.stdin_data:type_name -> wormhole.StdinData
	3,  // 5: wormhole.RpcClientMessage.terminal_resize:type_name -> wormhole.TerminalResize
	4,  // 6: wormhole.RpcClientMessage.request_pty:type_name -> wormhole.RequestPty
	5,  // 7: wormhole.RpcClientMessage.start_payload:type_name -> wormhole.StartPayload
	6,  // 8: wormhole.RpcClientMessage.nuke_data:type_name -> wormhole.NukeData
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_wormhole_proto_init() }
func file_wormhole_proto_init() {
	if File_wormhole_proto != nil {
		return
	}
	file_wormhole_proto_msgTypes[0].OneofWrappers = []any{
		(*RpcServerMessage_StdoutData)(nil),
		(*RpcServerMessage_StderrData)(nil),
		(*RpcServerMessage_ExitStatus)(nil),
		(*RpcServerMessage_ClientConnectAck)(nil),
	}
	file_wormhole_proto_msgTypes[1].OneofWrappers = []any{
		(*RpcClientMessage_StdinData)(nil),
		(*RpcClientMessage_TerminalResize)(nil),
		(*RpcClientMessage_RequestPty)(nil),
		(*RpcClientMessage_StartPayload)(nil),
		(*RpcClientMessage_NukeData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wormhole_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wormhole_proto_goTypes,
		DependencyIndexes: file_wormhole_proto_depIdxs,
		MessageInfos:      file_wormhole_proto_msgTypes,
	}.Build()
	File_wormhole_proto = out.File
	file_wormhole_proto_rawDesc = nil
	file_wormhole_proto_goTypes = nil
	file_wormhole_proto_depIdxs = nil
}
