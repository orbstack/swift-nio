// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: wormhole.proto

package generated

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// message created by server, sent to client
type RpcServerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ServerMessage:
	//
	//	*RpcServerMessage_StdoutData
	//	*RpcServerMessage_StderrData
	//	*RpcServerMessage_ExitStatus
	ServerMessage isRpcServerMessage_ServerMessage `protobuf_oneof:"server_message"`
}

func (x *RpcServerMessage) Reset() {
	*x = RpcServerMessage{}
	mi := &file_wormhole_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcServerMessage) ProtoMessage() {}

func (x *RpcServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wormhole_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcServerMessage.ProtoReflect.Descriptor instead.
func (*RpcServerMessage) Descriptor() ([]byte, []int) {
	return file_wormhole_proto_rawDescGZIP(), []int{0}
}

func (m *RpcServerMessage) GetServerMessage() isRpcServerMessage_ServerMessage {
	if m != nil {
		return m.ServerMessage
	}
	return nil
}

func (x *RpcServerMessage) GetStdoutData() *StdoutData {
	if x, ok := x.GetServerMessage().(*RpcServerMessage_StdoutData); ok {
		return x.StdoutData
	}
	return nil
}

func (x *RpcServerMessage) GetStderrData() *StderrData {
	if x, ok := x.GetServerMessage().(*RpcServerMessage_StderrData); ok {
		return x.StderrData
	}
	return nil
}

func (x *RpcServerMessage) GetExitStatus() *ExitStatus {
	if x, ok := x.GetServerMessage().(*RpcServerMessage_ExitStatus); ok {
		return x.ExitStatus
	}
	return nil
}

<<<<<<< HEAD
func (x *RpcServerMessage) GetClientConnectAck() *ClientConnectAck {
	if x, ok := x.GetServerMessage().(*RpcServerMessage_ClientConnectAck); ok {
		return x.ClientConnectAck
	}
	return nil
}

=======
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
type isRpcServerMessage_ServerMessage interface {
	isRpcServerMessage_ServerMessage()
}

type RpcServerMessage_StdoutData struct {
	StdoutData *StdoutData `protobuf:"bytes,1,opt,name=stdout_data,json=stdoutData,proto3,oneof"`
}

type RpcServerMessage_StderrData struct {
	StderrData *StderrData `protobuf:"bytes,2,opt,name=stderr_data,json=stderrData,proto3,oneof"`
}

type RpcServerMessage_ExitStatus struct {
	ExitStatus *ExitStatus `protobuf:"bytes,3,opt,name=exit_status,json=exitStatus,proto3,oneof"`
}

<<<<<<< HEAD
type RpcServerMessage_ClientConnectAck struct {
	ClientConnectAck *ClientConnectAck `protobuf:"bytes,4,opt,name=client_connect_ack,json=clientConnectAck,proto3,oneof"`
}

=======
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
func (*RpcServerMessage_StdoutData) isRpcServerMessage_ServerMessage() {}

func (*RpcServerMessage_StderrData) isRpcServerMessage_ServerMessage() {}

func (*RpcServerMessage_ExitStatus) isRpcServerMessage_ServerMessage() {}

<<<<<<< HEAD
func (*RpcServerMessage_ClientConnectAck) isRpcServerMessage_ServerMessage() {}

=======
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
// message created by client, sent to server
type RpcClientMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ClientMessage:
	//
	//	*RpcClientMessage_StdinData
<<<<<<< HEAD
<<<<<<< HEAD
	//	*RpcClientMessage_TerminalResize
=======
	//	*RpcClientMessage_TerminalReisze
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
=======
	//	*RpcClientMessage_TerminalResize
>>>>>>> 9170c3c22 (feat: migrate rpc to protobuf)
	//	*RpcClientMessage_RequestPty
	//	*RpcClientMessage_StartPayload
	ClientMessage isRpcClientMessage_ClientMessage `protobuf_oneof:"client_message"`
}

func (x *RpcClientMessage) Reset() {
	*x = RpcClientMessage{}
	mi := &file_wormhole_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcClientMessage) ProtoMessage() {}

func (x *RpcClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wormhole_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcClientMessage.ProtoReflect.Descriptor instead.
func (*RpcClientMessage) Descriptor() ([]byte, []int) {
	return file_wormhole_proto_rawDescGZIP(), []int{1}
}

func (m *RpcClientMessage) GetClientMessage() isRpcClientMessage_ClientMessage {
	if m != nil {
		return m.ClientMessage
	}
	return nil
}

func (x *RpcClientMessage) GetStdinData() *StdinData {
	if x, ok := x.GetClientMessage().(*RpcClientMessage_StdinData); ok {
		return x.StdinData
	}
	return nil
}

<<<<<<< HEAD
<<<<<<< HEAD
func (x *RpcClientMessage) GetTerminalResize() *TerminalResize {
	if x, ok := x.GetClientMessage().(*RpcClientMessage_TerminalResize); ok {
		return x.TerminalResize
=======
func (x *RpcClientMessage) GetTerminalReisze() *TerminalResize {
	if x, ok := x.GetClientMessage().(*RpcClientMessage_TerminalReisze); ok {
		return x.TerminalReisze
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
=======
func (x *RpcClientMessage) GetTerminalResize() *TerminalResize {
	if x, ok := x.GetClientMessage().(*RpcClientMessage_TerminalResize); ok {
		return x.TerminalResize
>>>>>>> 9170c3c22 (feat: migrate rpc to protobuf)
	}
	return nil
}

func (x *RpcClientMessage) GetRequestPty() *RequestPty {
	if x, ok := x.GetClientMessage().(*RpcClientMessage_RequestPty); ok {
		return x.RequestPty
	}
	return nil
}

func (x *RpcClientMessage) GetStartPayload() *StartPayload {
	if x, ok := x.GetClientMessage().(*RpcClientMessage_StartPayload); ok {
		return x.StartPayload
	}
	return nil
}

type isRpcClientMessage_ClientMessage interface {
	isRpcClientMessage_ClientMessage()
}

type RpcClientMessage_StdinData struct {
	StdinData *StdinData `protobuf:"bytes,1,opt,name=stdin_data,json=stdinData,proto3,oneof"`
}

<<<<<<< HEAD
<<<<<<< HEAD
type RpcClientMessage_TerminalResize struct {
	TerminalResize *TerminalResize `protobuf:"bytes,2,opt,name=terminal_resize,json=terminalResize,proto3,oneof"`
=======
type RpcClientMessage_TerminalReisze struct {
	TerminalReisze *TerminalResize `protobuf:"bytes,2,opt,name=terminal_reisze,json=terminalReisze,proto3,oneof"`
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
=======
type RpcClientMessage_TerminalResize struct {
	TerminalResize *TerminalResize `protobuf:"bytes,2,opt,name=terminal_resize,json=terminalResize,proto3,oneof"`
>>>>>>> 9170c3c22 (feat: migrate rpc to protobuf)
}

type RpcClientMessage_RequestPty struct {
	RequestPty *RequestPty `protobuf:"bytes,3,opt,name=request_pty,json=requestPty,proto3,oneof"`
}

type RpcClientMessage_StartPayload struct {
	StartPayload *StartPayload `protobuf:"bytes,4,opt,name=start_payload,json=startPayload,proto3,oneof"`
}

func (*RpcClientMessage_StdinData) isRpcClientMessage_ClientMessage() {}

<<<<<<< HEAD
<<<<<<< HEAD
func (*RpcClientMessage_TerminalResize) isRpcClientMessage_ClientMessage() {}
=======
func (*RpcClientMessage_TerminalReisze) isRpcClientMessage_ClientMessage() {}
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
=======
func (*RpcClientMessage_TerminalResize) isRpcClientMessage_ClientMessage() {}
>>>>>>> 9170c3c22 (feat: migrate rpc to protobuf)

func (*RpcClientMessage_RequestPty) isRpcClientMessage_ClientMessage() {}

func (*RpcClientMessage_StartPayload) isRpcClientMessage_ClientMessage() {}

<<<<<<< HEAD
type RpcClientInit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartServer bool `protobuf:"varint,1,opt,name=start_server,json=startServer,proto3" json:"start_server,omitempty"`
}

func (x *RpcClientInit) Reset() {
	*x = RpcClientInit{}
	mi := &file_wormhole_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcClientInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcClientInit) ProtoMessage() {}

func (x *RpcClientInit) ProtoReflect() protoreflect.Message {
	mi := &file_wormhole_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcClientInit.ProtoReflect.Descriptor instead.
func (*RpcClientInit) Descriptor() ([]byte, []int) {
	return file_wormhole_proto_rawDescGZIP(), []int{2}
}

func (x *RpcClientInit) GetStartServer() bool {
	if x != nil {
		return x.StartServer
	}
	return false
}

type RpcClientInitAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RpcClientInitAck) Reset() {
	*x = RpcClientInitAck{}
	mi := &file_wormhole_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcClientInitAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcClientInitAck) ProtoMessage() {}

func (x *RpcClientInitAck) ProtoReflect() protoreflect.Message {
	mi := &file_wormhole_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcClientInitAck.ProtoReflect.Descriptor instead.
func (*RpcClientInitAck) Descriptor() ([]byte, []int) {
	return file_wormhole_proto_rawDescGZIP(), []int{3}
}

=======
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
// server messages
type StdinData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,11,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StdinData) Reset() {
	*x = StdinData{}
<<<<<<< HEAD
	mi := &file_wormhole_proto_msgTypes[4]
=======
	mi := &file_wormhole_proto_msgTypes[2]
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StdinData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StdinData) ProtoMessage() {}

func (x *StdinData) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_wormhole_proto_msgTypes[4]
=======
	mi := &file_wormhole_proto_msgTypes[2]
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StdinData.ProtoReflect.Descriptor instead.
func (*StdinData) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_wormhole_proto_rawDescGZIP(), []int{4}
=======
	return file_wormhole_proto_rawDescGZIP(), []int{2}
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
}

func (x *StdinData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type TerminalResize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cols uint32 `protobuf:"varint,12,opt,name=cols,proto3" json:"cols,omitempty"`
	Rows uint32 `protobuf:"varint,13,opt,name=rows,proto3" json:"rows,omitempty"`
}

func (x *TerminalResize) Reset() {
	*x = TerminalResize{}
<<<<<<< HEAD
	mi := &file_wormhole_proto_msgTypes[5]
=======
	mi := &file_wormhole_proto_msgTypes[3]
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerminalResize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalResize) ProtoMessage() {}

func (x *TerminalResize) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_wormhole_proto_msgTypes[5]
=======
	mi := &file_wormhole_proto_msgTypes[3]
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalResize.ProtoReflect.Descriptor instead.
func (*TerminalResize) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_wormhole_proto_rawDescGZIP(), []int{5}
=======
	return file_wormhole_proto_rawDescGZIP(), []int{3}
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
}

func (x *TerminalResize) GetCols() uint32 {
	if x != nil {
		return x.Cols
	}
	return 0
}

func (x *TerminalResize) GetRows() uint32 {
	if x != nil {
		return x.Rows
	}
	return 0
}

type RequestPty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TermEnv string `protobuf:"bytes,14,opt,name=term_env,json=termEnv,proto3" json:"term_env,omitempty"`
<<<<<<< HEAD
<<<<<<< HEAD
	Rows    uint32 `protobuf:"varint,15,opt,name=rows,proto3" json:"rows,omitempty"`
	Cols    uint32 `protobuf:"varint,16,opt,name=cols,proto3" json:"cols,omitempty"`
=======
	Rows    string `protobuf:"bytes,15,opt,name=rows,proto3" json:"rows,omitempty"`
	Cols    string `protobuf:"bytes,16,opt,name=cols,proto3" json:"cols,omitempty"`
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
=======
	Rows    uint32 `protobuf:"varint,15,opt,name=rows,proto3" json:"rows,omitempty"`
	Cols    uint32 `protobuf:"varint,16,opt,name=cols,proto3" json:"cols,omitempty"`
>>>>>>> 9170c3c22 (feat: migrate rpc to protobuf)
	Termios []byte `protobuf:"bytes,17,opt,name=termios,proto3" json:"termios,omitempty"`
}

func (x *RequestPty) Reset() {
	*x = RequestPty{}
<<<<<<< HEAD
	mi := &file_wormhole_proto_msgTypes[6]
=======
	mi := &file_wormhole_proto_msgTypes[4]
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestPty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPty) ProtoMessage() {}

func (x *RequestPty) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_wormhole_proto_msgTypes[6]
=======
	mi := &file_wormhole_proto_msgTypes[4]
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPty.ProtoReflect.Descriptor instead.
func (*RequestPty) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_wormhole_proto_rawDescGZIP(), []int{6}
=======
	return file_wormhole_proto_rawDescGZIP(), []int{4}
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
}

func (x *RequestPty) GetTermEnv() string {
	if x != nil {
		return x.TermEnv
	}
	return ""
}

<<<<<<< HEAD
<<<<<<< HEAD
func (x *RequestPty) GetRows() uint32 {
	if x != nil {
		return x.Rows
	}
	return 0
}

func (x *RequestPty) GetCols() uint32 {
	if x != nil {
		return x.Cols
	}
	return 0
=======
func (x *RequestPty) GetRows() string {
=======
func (x *RequestPty) GetRows() uint32 {
>>>>>>> 9170c3c22 (feat: migrate rpc to protobuf)
	if x != nil {
		return x.Rows
	}
	return 0
}

func (x *RequestPty) GetCols() uint32 {
	if x != nil {
		return x.Cols
	}
<<<<<<< HEAD
	return ""
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
=======
	return 0
>>>>>>> 9170c3c22 (feat: migrate rpc to protobuf)
}

func (x *RequestPty) GetTermios() []byte {
	if x != nil {
		return x.Termios
	}
	return nil
}

type StartPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

<<<<<<< HEAD
<<<<<<< HEAD
	WormholeParam string `protobuf:"bytes,18,opt,name=wormhole_param,json=wormholeParam,proto3" json:"wormhole_param,omitempty"`
=======
	WormholeConfig string `protobuf:"bytes,18,opt,name=wormhole_config,json=wormholeConfig,proto3" json:"wormhole_config,omitempty"`
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
=======
	WormholeParam string `protobuf:"bytes,18,opt,name=wormhole_param,json=wormholeParam,proto3" json:"wormhole_param,omitempty"`
>>>>>>> 9170c3c22 (feat: migrate rpc to protobuf)
}

func (x *StartPayload) Reset() {
	*x = StartPayload{}
<<<<<<< HEAD
	mi := &file_wormhole_proto_msgTypes[7]
=======
	mi := &file_wormhole_proto_msgTypes[5]
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPayload) ProtoMessage() {}

func (x *StartPayload) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_wormhole_proto_msgTypes[7]
=======
	mi := &file_wormhole_proto_msgTypes[5]
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPayload.ProtoReflect.Descriptor instead.
func (*StartPayload) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_wormhole_proto_rawDescGZIP(), []int{7}
}

func (x *StartPayload) GetWormholeParam() string {
	if x != nil {
		return x.WormholeParam
=======
	return file_wormhole_proto_rawDescGZIP(), []int{5}
}

func (x *StartPayload) GetWormholeParam() string {
	if x != nil {
<<<<<<< HEAD
		return x.WormholeConfig
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
=======
		return x.WormholeParam
>>>>>>> 9170c3c22 (feat: migrate rpc to protobuf)
	}
	return ""
}

// client messages
type StdoutData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,11,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StdoutData) Reset() {
	*x = StdoutData{}
<<<<<<< HEAD
	mi := &file_wormhole_proto_msgTypes[8]
=======
	mi := &file_wormhole_proto_msgTypes[6]
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StdoutData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StdoutData) ProtoMessage() {}

func (x *StdoutData) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_wormhole_proto_msgTypes[8]
=======
	mi := &file_wormhole_proto_msgTypes[6]
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StdoutData.ProtoReflect.Descriptor instead.
func (*StdoutData) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_wormhole_proto_rawDescGZIP(), []int{8}
=======
	return file_wormhole_proto_rawDescGZIP(), []int{6}
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
}

func (x *StdoutData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type StderrData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,12,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StderrData) Reset() {
	*x = StderrData{}
<<<<<<< HEAD
	mi := &file_wormhole_proto_msgTypes[9]
=======
	mi := &file_wormhole_proto_msgTypes[7]
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StderrData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StderrData) ProtoMessage() {}

func (x *StderrData) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_wormhole_proto_msgTypes[9]
=======
	mi := &file_wormhole_proto_msgTypes[7]
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StderrData.ProtoReflect.Descriptor instead.
func (*StderrData) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_wormhole_proto_rawDescGZIP(), []int{9}
=======
	return file_wormhole_proto_rawDescGZIP(), []int{7}
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
}

func (x *StderrData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ExitStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExitCode uint32 `protobuf:"varint,13,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
}

func (x *ExitStatus) Reset() {
	*x = ExitStatus{}
<<<<<<< HEAD
	mi := &file_wormhole_proto_msgTypes[10]
=======
	mi := &file_wormhole_proto_msgTypes[8]
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExitStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitStatus) ProtoMessage() {}

func (x *ExitStatus) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_wormhole_proto_msgTypes[10]
=======
	mi := &file_wormhole_proto_msgTypes[8]
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitStatus.ProtoReflect.Descriptor instead.
func (*ExitStatus) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_wormhole_proto_rawDescGZIP(), []int{10}
=======
	return file_wormhole_proto_rawDescGZIP(), []int{8}
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
}

func (x *ExitStatus) GetExitCode() uint32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

<<<<<<< HEAD
type ClientConnectAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClientConnectAck) Reset() {
	*x = ClientConnectAck{}
	mi := &file_wormhole_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientConnectAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientConnectAck) ProtoMessage() {}

func (x *ClientConnectAck) ProtoReflect() protoreflect.Message {
	mi := &file_wormhole_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientConnectAck.ProtoReflect.Descriptor instead.
func (*ClientConnectAck) Descriptor() ([]byte, []int) {
	return file_wormhole_proto_rawDescGZIP(), []int{11}
}

=======
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
var File_wormhole_proto protoreflect.FileDescriptor

var file_wormhole_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
<<<<<<< HEAD
	0x12, 0x08, 0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x22, 0x9b, 0x02, 0x0a, 0x10, 0x52,
=======
	0x12, 0x08, 0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x22, 0xcf, 0x01, 0x0a, 0x10, 0x52,
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
	0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x37, 0x0a, 0x0b, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x2e,
	0x53, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x74,
	0x64, 0x6f, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x0b, 0x73, 0x74, 0x64, 0x65,
	0x72, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x64, 0x65, 0x72, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x37, 0x0a, 0x0b, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c,
	0x65, 0x2e, 0x45, 0x78, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x0a,
<<<<<<< HEAD
	0x65, 0x78, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4a, 0x0a, 0x12, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x63, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c,
	0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x41,
	0x63, 0x6b, 0x48, 0x00, 0x52, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x41, 0x63, 0x6b, 0x42, 0x10, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x97, 0x02, 0x0a, 0x10, 0x52, 0x70, 0x63,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a,
	0x0a, 0x73, 0x74, 0x64, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x64,
	0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x64, 0x69, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x43, 0x0a, 0x0f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x5f,
	0x72, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77,
	0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x70, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x74,
	0x79, 0x12, 0x3d, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x6f, 0x72, 0x6d, 0x68,
	0x6f, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x42, 0x10, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x32, 0x0a, 0x0d, 0x52, 0x70, 0x63, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x69, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x12, 0x0a, 0x10, 0x52, 0x70, 0x63, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x41, 0x63, 0x6b, 0x22, 0x1f, 0x0a, 0x09, 0x53, 0x74,
	0x64, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x38, 0x0a, 0x0e, 0x54,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x6c,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x69, 0x0a, 0x0a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x65, 0x6e, 0x76, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x65, 0x72, 0x6d, 0x45, 0x6e, 0x76, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x6f,
	0x77, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6f,
	0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6f, 0x73,
	0x22, 0x35, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f,
	0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x20, 0x0a, 0x0a, 0x53, 0x74, 0x64, 0x6f, 0x75,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x20, 0x0a, 0x0a, 0x53, 0x74, 0x64,
	0x65, 0x72, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x29, 0x0a, 0x0a, 0x45,
	0x78, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69,
	0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x78,
	0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x41, 0x63, 0x6b, 0x42, 0x14, 0x5a, 0x12, 0x63, 0x6d,
	0x64, 0x2f, 0x73, 0x63, 0x6c, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
=======
	0x65, 0x78, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x97, 0x02, 0x0a,
	0x10, 0x52, 0x70, 0x63, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x34, 0x0a, 0x0a, 0x73, 0x74, 0x64, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65,
	0x2e, 0x53, 0x74, 0x64, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74,
	0x64, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x43, 0x0a, 0x0f, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x54, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x37, 0x0a, 0x0b,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x74, 0x79, 0x12, 0x3d, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77,
	0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x1f, 0x0a, 0x09, 0x53, 0x74, 0x64, 0x69, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x38, 0x0a, 0x0e, 0x54, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x6c,
	0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x6f, 0x77,
	0x73, 0x22, 0x69, 0x0a, 0x0a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x74, 0x79, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x65, 0x6e, 0x76, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x65, 0x72, 0x6d, 0x45, 0x6e, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f,
	0x77, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f,
	0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6f, 0x73, 0x18, 0x11, 0x20,
<<<<<<< HEAD
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6f, 0x73, 0x22, 0x37, 0x0a, 0x0c,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x20, 0x0a, 0x0a, 0x53, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x20, 0x0a, 0x0a, 0x53, 0x74, 0x64, 0x65, 0x72,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x29, 0x0a, 0x0a, 0x45, 0x78, 0x69,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x42, 0x14, 0x5a, 0x12, 0x63, 0x6d, 0x64, 0x2f, 0x73, 0x63, 0x6c, 0x69,
	0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
=======
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6f, 0x73, 0x22, 0x35, 0x0a, 0x0c,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x22, 0x20, 0x0a, 0x0a, 0x53, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x20, 0x0a, 0x0a, 0x53, 0x74, 0x64, 0x65, 0x72, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x29, 0x0a, 0x0a, 0x45, 0x78, 0x69, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x42, 0x14, 0x5a, 0x12, 0x63, 0x6d, 0x64, 0x2f, 0x73, 0x63, 0x6c, 0x69, 0x2f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
>>>>>>> 9170c3c22 (feat: migrate rpc to protobuf)
}

var (
	file_wormhole_proto_rawDescOnce sync.Once
	file_wormhole_proto_rawDescData = file_wormhole_proto_rawDesc
)

func file_wormhole_proto_rawDescGZIP() []byte {
	file_wormhole_proto_rawDescOnce.Do(func() {
		file_wormhole_proto_rawDescData = protoimpl.X.CompressGZIP(file_wormhole_proto_rawDescData)
	})
	return file_wormhole_proto_rawDescData
}

<<<<<<< HEAD
var file_wormhole_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_wormhole_proto_goTypes = []any{
	(*RpcServerMessage)(nil), // 0: wormhole.RpcServerMessage
	(*RpcClientMessage)(nil), // 1: wormhole.RpcClientMessage
	(*RpcClientInit)(nil),    // 2: wormhole.RpcClientInit
	(*RpcClientInitAck)(nil), // 3: wormhole.RpcClientInitAck
	(*StdinData)(nil),        // 4: wormhole.StdinData
	(*TerminalResize)(nil),   // 5: wormhole.TerminalResize
	(*RequestPty)(nil),       // 6: wormhole.RequestPty
	(*StartPayload)(nil),     // 7: wormhole.StartPayload
	(*StdoutData)(nil),       // 8: wormhole.StdoutData
	(*StderrData)(nil),       // 9: wormhole.StderrData
	(*ExitStatus)(nil),       // 10: wormhole.ExitStatus
	(*ClientConnectAck)(nil), // 11: wormhole.ClientConnectAck
}
var file_wormhole_proto_depIdxs = []int32{
	8,  // 0: wormhole.RpcServerMessage.stdout_data:type_name -> wormhole.StdoutData
	9,  // 1: wormhole.RpcServerMessage.stderr_data:type_name -> wormhole.StderrData
	10, // 2: wormhole.RpcServerMessage.exit_status:type_name -> wormhole.ExitStatus
	11, // 3: wormhole.RpcServerMessage.client_connect_ack:type_name -> wormhole.ClientConnectAck
	4,  // 4: wormhole.RpcClientMessage.stdin_data:type_name -> wormhole.StdinData
	5,  // 5: wormhole.RpcClientMessage.terminal_resize:type_name -> wormhole.TerminalResize
	6,  // 6: wormhole.RpcClientMessage.request_pty:type_name -> wormhole.RequestPty
	7,  // 7: wormhole.RpcClientMessage.start_payload:type_name -> wormhole.StartPayload
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
=======
var file_wormhole_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_wormhole_proto_goTypes = []any{
	(*RpcServerMessage)(nil), // 0: wormhole.RpcServerMessage
	(*RpcClientMessage)(nil), // 1: wormhole.RpcClientMessage
	(*StdinData)(nil),        // 2: wormhole.StdinData
	(*TerminalResize)(nil),   // 3: wormhole.TerminalResize
	(*RequestPty)(nil),       // 4: wormhole.RequestPty
	(*StartPayload)(nil),     // 5: wormhole.StartPayload
	(*StdoutData)(nil),       // 6: wormhole.StdoutData
	(*StderrData)(nil),       // 7: wormhole.StderrData
	(*ExitStatus)(nil),       // 8: wormhole.ExitStatus
}
var file_wormhole_proto_depIdxs = []int32{
	6, // 0: wormhole.RpcServerMessage.stdout_data:type_name -> wormhole.StdoutData
	7, // 1: wormhole.RpcServerMessage.stderr_data:type_name -> wormhole.StderrData
	8, // 2: wormhole.RpcServerMessage.exit_status:type_name -> wormhole.ExitStatus
	2, // 3: wormhole.RpcClientMessage.stdin_data:type_name -> wormhole.StdinData
	3, // 4: wormhole.RpcClientMessage.terminal_resize:type_name -> wormhole.TerminalResize
	4, // 5: wormhole.RpcClientMessage.request_pty:type_name -> wormhole.RequestPty
	5, // 6: wormhole.RpcClientMessage.start_payload:type_name -> wormhole.StartPayload
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
}

func init() { file_wormhole_proto_init() }
func file_wormhole_proto_init() {
	if File_wormhole_proto != nil {
		return
	}
	file_wormhole_proto_msgTypes[0].OneofWrappers = []any{
		(*RpcServerMessage_StdoutData)(nil),
		(*RpcServerMessage_StderrData)(nil),
		(*RpcServerMessage_ExitStatus)(nil),
<<<<<<< HEAD
		(*RpcServerMessage_ClientConnectAck)(nil),
	}
	file_wormhole_proto_msgTypes[1].OneofWrappers = []any{
		(*RpcClientMessage_StdinData)(nil),
		(*RpcClientMessage_TerminalResize)(nil),
=======
	}
	file_wormhole_proto_msgTypes[1].OneofWrappers = []any{
		(*RpcClientMessage_StdinData)(nil),
<<<<<<< HEAD
		(*RpcClientMessage_TerminalReisze)(nil),
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
=======
		(*RpcClientMessage_TerminalResize)(nil),
>>>>>>> 9170c3c22 (feat: migrate rpc to protobuf)
		(*RpcClientMessage_RequestPty)(nil),
		(*RpcClientMessage_StartPayload)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wormhole_proto_rawDesc,
			NumEnums:      0,
<<<<<<< HEAD
			NumMessages:   12,
=======
			NumMessages:   9,
>>>>>>> ae2d2750d (tmp: protobuf for server messages)
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wormhole_proto_goTypes,
		DependencyIndexes: file_wormhole_proto_depIdxs,
		MessageInfos:      file_wormhole_proto_msgTypes,
	}.Build()
	File_wormhole_proto = out.File
	file_wormhole_proto_rawDesc = nil
	file_wormhole_proto_goTypes = nil
	file_wormhole_proto_depIdxs = nil
}
